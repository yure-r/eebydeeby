{"ast":null,"code":"import _classCallCheck from \"/Users/richardyurewitch/Downloads/emojibuilder-master 3/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/richardyurewitch/Downloads/emojibuilder-master 3/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/richardyurewitch/Downloads/emojibuilder-master 3/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/richardyurewitch/Downloads/emojibuilder-master 3/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/richardyurewitch/Downloads/emojibuilder-master 3/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/richardyurewitch/Downloads/emojibuilder-master 3/src/Canvas.js\";\nimport React, { Component } from 'react';\nimport './Canvas.css';\nvar App;\n\nvar Canvas =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Canvas, _Component);\n\n  function Canvas(props) {\n    var _this;\n\n    _classCallCheck(this, Canvas);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Canvas).call(this, props));\n    _this.mainCanvas = React.createRef();\n    _this.smallCanvas = React.createRef();\n\n    _this.draw = function () {\n      var base = App.findBaseLayer();\n\n      _this.ctx.clearRect(0, 0, App.config.compSize, App.config.compSize);\n\n      App.state.layers.forEach(function (layer) {\n        if (!layer.asset.base && base) {\n          if (base.asset.translate) {\n            _this.ctx.translate(App.config.compSize * base.asset.translate[0], App.config.compSize * base.asset.translate[1]);\n          }\n\n          if (base.asset.scale) {\n            _this.ctx.scale(base.asset.scale, base.asset.scale);\n          }\n        }\n\n        _this.ctx.translate(App.config.compSize / 2, App.config.compSize / 2);\n\n        _this.ctx.scale(parseFloat(layer.transform.scale), parseFloat(layer.transform.scale));\n\n        _this.ctx.rotate(parseFloat(layer.transform.rotate) * Math.PI / 180);\n\n        _this.ctx.translate(-App.config.compSize / 2, -App.config.compSize / 2);\n\n        _this.ctx.translate(parseFloat(layer.transform.translateX), parseFloat(layer.transform.translateY));\n\n        if (layer.flipped) {\n          _this.ctx.scale(-1, 1);\n\n          _this.ctx.drawImage(layer.asset.img, -App.config.compSize, 0);\n        } else {\n          _this.ctx.drawImage(layer.asset.img, 0, 0);\n        }\n\n        _this.ctx.resetTransform();\n      });\n\n      _this.smallCanvas.current.getContext('2d').drawImage(_this.mainCanvas.current, 0, 0);\n    };\n\n    App = _this.props.app;\n    return _this;\n  }\n\n  _createClass(Canvas, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Canvas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        className: \"main\",\n        ref: this.mainCanvas,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }), React.createElement(\"canvas\", {\n        className: \"small\",\n        ref: this.smallCanvas,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount(nextProps, nextState) {\n      [this.mainCanvas, this.smallCanvas].forEach(function (canvas) {\n        canvas.current.width = App.config.compSize;\n        canvas.current.height = App.config.compSize;\n      });\n      this.ctx = this.mainCanvas.current.getContext('2d');\n      this.smallCanvas.current.getContext('2d').globalCompositeOperation = 'copy';\n      this.draw();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(nextProps, nextState) {\n      this.draw();\n    }\n  }]);\n\n  return Canvas;\n}(Component);\n\nexport default Canvas;","map":{"version":3,"sources":["/Users/richardyurewitch/Downloads/emojibuilder-master 3/src/Canvas.js"],"names":["React","Component","App","Canvas","props","mainCanvas","createRef","smallCanvas","draw","base","findBaseLayer","ctx","clearRect","config","compSize","state","layers","forEach","layer","asset","translate","scale","parseFloat","transform","rotate","Math","PI","translateX","translateY","flipped","drawImage","img","resetTransform","current","getContext","app","nextProps","nextState","canvas","width","height","globalCompositeOperation"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Canvas.css';\n\nlet App;\n\nclass Canvas extends Component {\n  mainCanvas = React.createRef();\n  smallCanvas = React.createRef();\n\n  constructor(props) {\n    super(props);\n    App = this.props.app;\n  }\n\n  render() {\n    return (\n      <div className='Canvas'>\n        <canvas className='main' ref={this.mainCanvas}></canvas>\n        <canvas className='small' ref={this.smallCanvas}></canvas>\n      </div>\n    );\n  }\n\n  componentDidMount(nextProps, nextState) {\n    [this.mainCanvas, this.smallCanvas].forEach(canvas => {\n      canvas.current.width = App.config.compSize;\n      canvas.current.height = App.config.compSize;\n    })\n\n    this.ctx = this.mainCanvas.current.getContext('2d');\n    this.smallCanvas.current.getContext('2d').globalCompositeOperation = 'copy';\n\n    this.draw();\n  }\n\n  componentDidUpdate(nextProps, nextState) {\n    this.draw();\n  }\n\n  draw = () => {\n    const base = App.findBaseLayer();\n  \n    this.ctx.clearRect(0, 0, App.config.compSize, App.config.compSize);\n  \n    App.state.layers.forEach(layer => {\n      if (!layer.asset.base && base) {\n        if (base.asset.translate) {\n          this.ctx.translate(\n            App.config.compSize * base.asset.translate[0], \n            App.config.compSize * base.asset.translate[1]\n          );\n        }\n        if (base.asset.scale) {\n          this.ctx.scale(base.asset.scale, base.asset.scale);\n        }\n      }\n  \n      this.ctx.translate(App.config.compSize/2, App.config.compSize/2);\n      this.ctx.scale(parseFloat(layer.transform.scale), parseFloat(layer.transform.scale));\n      this.ctx.rotate(parseFloat(layer.transform.rotate) * Math.PI / 180);\n      this.ctx.translate(-App.config.compSize/2, -App.config.compSize/2);\n      this.ctx.translate(parseFloat(layer.transform.translateX), parseFloat(layer.transform.translateY));\n  \n      if (layer.flipped) {\n        this.ctx.scale(-1, 1);\n        this.ctx.drawImage(layer.asset.img, -App.config.compSize, 0);\n      } else {\n        this.ctx.drawImage(layer.asset.img, 0, 0);\n      }\n  \n      this.ctx.resetTransform();\n    });\n\n    this.smallCanvas.current.getContext('2d').drawImage(this.mainCanvas.current, 0, 0);\n  }\n}\n\nexport default Canvas;"]},"metadata":{},"sourceType":"module"}